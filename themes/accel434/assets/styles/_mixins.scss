@use "sass:math";

// bg allows simply addition of background position, size and repeat. Defaults to center, cover and no-repeat.
@mixin bg($position: center, $size: cover, $repeat: no-repeat) {
  background-position: $position;
  background-repeat: $repeat;
  background-size: $size;
}

@mixin bg_overlay($color: $blue, $opacity: 0.7) {
  position: relative;

  &:before {
    transition: all $base-timing $base-duration;
    background-color: rgba($color, $opacity);
    content: "";
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }

  .wrap {
    position: relative;
    z-index: 100;
  }
}

@mixin base_transition() {
  transition: all $base-duration $base-timing;
}

@mixin outer_container($width) {
  max-width: $width;
  margin-left: auto;
  margin-right: auto;
}

@mixin span-columns($columns) {
  width: math.div($columns, 12) * 100%;
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    $divider: $number * 0 + 1;
    @return math.div($number, $divider);
  }

  @return $number;
}

@function em($pixels) {
  $clean: strip-unit($pixels);
  @return math.div($clean, 16) + em;
}

@function rem($pixels) {
  $clean: strip-unit($pixels);
  @return math.div($clean, 16) + rem;
}

// Text Colors
@mixin text_colors() {
  .text-blue {
    color: $blue;
  }

  .text-light-blue {
    color: $light-blue;
  }

  .text-dark-gray {
    color: $dark-gray;
  }

  .text-medium-gray {
    color: $medium-gray;
  }

  .text-light-gray {
    color: $light-gray;
  }

  .text-white {
    color: white;

    a {
      color: white;
      text-decoration: underline;

      &:hover {
        text-decoration: none;
      }
    }
  }
}
